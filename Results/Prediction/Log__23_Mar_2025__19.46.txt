Log:
Training done. Time taken: 0:00:12.103585
params tried:
{'estimator__classifier__max_depth': [10, 12, 15, 17], 'estimator__classifier__max_features': [0.7, 0.85, 0.9, 1], 'estimator__classifier__min_samples_split': [2, 3, 4], 'estimator__classifier__n_estimators': [800], 'estimator__classifier__random_state': [93], 'estimator__oversampler__k_neighbors': [3, 5, 7], 'estimator__oversampler__sampling_strategy': ['auto']}

Best training make_scorer(f1_score, response_method='predict', average=micro, zero_division=0) score: 0.407. Best model params:
{'estimator__classifier__penalty': None}.

Best Log model performance on test data:
              precision    recall  f1-score   support

           0       0.62      0.63      0.62      2117
           1       0.28      0.63      0.39       847
           2       0.12      0.57      0.20       450
           3       0.51      0.64      0.57      1653
           4       0.19      0.74      0.30       501
           5       0.14      0.66      0.24       290
           6       0.26      0.76      0.39       617
           7       0.18      0.69      0.28       458
           8       0.33      0.78      0.47       466
           9       0.18      0.64      0.29       398

   micro avg       0.29      0.66      0.41      7797
   macro avg       0.28      0.67      0.37      7797
weighted avg       0.39      0.66      0.46      7797
 samples avg       0.30      0.66      0.39      7797

Confusion matrices:
 Predicted: 
   N | P  
[[TN, FP] 
[FN, TP]] 
 
[[[1190  816]
  [ 787 1330]]

 [[1900 1376]
  [ 310  537]]

 [[1850 1823]
  [ 195  255]]

 [[1462 1008]
  [ 590 1063]]

 [[1992 1630]
  [ 130  371]]

 [[2691 1142]
  [  98  192]]

 [[2202 1304]
  [ 149  468]]

 [[2196 1469]
  [ 142  316]]

 [[2928  729]
  [ 102  364]]

 [[2590 1135]
  [ 142  256]]]
